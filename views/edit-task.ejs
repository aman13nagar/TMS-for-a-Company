<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task List</title>
    <!-- Compiled and minified CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <style>
        body {
            display: flex;
            min-height: 100vh;
            flex-direction: column;
            background: #f5f5f5;
        }

        main {
            flex: 1 0 auto;
            padding: 20px;
        }

        .container {
            margin-top: 50px;
        }

        .task-list {
            list-style-type: none;
            padding: 0;
        }

        .task-list li {
            background: white;
            padding: 20px;
            margin-bottom: 10px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s, box-shadow 0.3s;
        }

        .task-list li:hover {
            transform: scale(1.02);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
        }

        .task-list h3 {
            margin: 0 0 10px;
            color: #4caf50;
        }

        .task-list p {
            margin: 5px 0;
        }

        .btn-custom {
            margin-right: 10px;
        }

        .update-task-form {
            display: none;
            margin-top: 20px;
            padding: 20px;
            border: 1px solid #e0e0e0;
            border-radius: 10px;
            background-color: #fafafa;
        }

        .modal {
            display: none;
        }

        .modal-content {
            padding: 20px;
        }

        .close {
            float: right;
            cursor: pointer;
            font-size: 1.5em;
        }

        .pagination {
            text-align: center;
            margin-top: 20px;
        }

        .pagination .page-item {
            display: inline-block;
            margin: 0 5px;
        }

        .pagination .page-link {
            padding: 10px 15px;
            color: #007bff;
            border: 1px solid #ddd;
            border-radius: 50%;
            cursor: pointer;
        }

        .pagination .page-link:hover {
            background-color: #007bff;
            color: white;
        }

        .pagination .active .page-link {
            background-color: #007bff;
            color: white;
            border-color: #007bff;
        }

        .filter-bar {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
        }

        .filter-bar .input-field {
            margin: 0;
        }
    </style>
</head>
<body>
  <main>
    <div class="container">
      <a href="/home-dashboard" margin-bottom="10px"><button class="btn btn-primary" style="margin-bottom:20px">Go Back</button></a>
      <div class="filter-bar">
          <div class="input-field">
              <input type="text" id="search" placeholder="Search tasks...">
          </div>
          <div class="input-field">
              <select id="filterPriority">
                  <option value="" disabled selected>Filter by Priority</option>
                  <option value="low">Low</option>
                  <option value="medium">Medium</option>
                  <option value="high">High</option>
              </select>
          </div>
          <div class="input-field">
              <select id="filterStatus">
                  <option value="" disabled selected>Filter by Status</option>
                  <option value="not started">Not Started</option>
                  <option value="in progress">In Progress</option>
                  <option value="completed">Completed</option>
              </select>
          </div>
      </div>
      <ul class="task-list">
          <% if (tasks.length === 0) { %>
              <div id="noTasksModal" class="modal">
                  <div class="modal-content">
                      <span class="close" onclick="closeModal()">&times;</span>
                      <h2>No Tasks Available</h2>
                      <p>You currently have no tasks. Please check back later or create a new task.</p>
                      <a href="/tasks" class="btn btn-secondary">Create Task</a>
                  </div>
              </div>
          <% } else { %>
              <% tasks.forEach(task => { %>
                  <li class="task-item" data-priority="<%= task.priority %>" data-status="<%= task.status %>">
                      <h3><%= task.title %></h3>
                      <p><%= task.description %></p>
                      <p>Priority: <%= task.priority %></p>
                      <p>Due Date: <%= task.dueDate.toDateString() %></p>
                      <p>Status: <%= task.status %></p>
                      <p>Assigned To: <%= task.assignedTo ? task.assignedTo.username : 'Unassigned' %></p>
                      <button class="update-task-btn btn waves-effect waves-light btn-custom green" data-task-id="<%= task._id %>">Update Task</button>
                      <button class="delete-task-btn btn waves-effect waves-light btn-custom red" data-task-id="<%= task._id %>">Delete Task</button>
                      <form action="/manager/update-task" method="POST" id="update-task-form-<%= task._id %>" class="update-task-form">
                          <input type="hidden" name="taskId" value="<%= task._id %>">
                          <div class="input-field">
                              <input type="text" id="title-<%= task._id %>" name="title" value="<%= task.title %>">
                              <label for="title-<%= task._id %>">Title</label>
                          </div>
                          <div class="input-field">
                              <textarea id="description-<%= task._id %>" name="description" class="materialize-textarea"><%= task.description %></textarea>
                              <label for="description-<%= task._id %>">Description</label>
                          </div>
                          <div class="input-field">
                              <select id="priority-<%= task._id %>" name="priority">
                                  <option value="low" <%= task.priority === 'low' ? 'selected' : '' %>>Low</option>
                                  <option value="medium" <%= task.priority === 'medium' ? 'selected' : '' %>>Medium</option>
                                  <option value="high" <%= task.priority === 'high' ? 'selected' : '' %>>High</option>
                              </select>
                              <label for="priority-<%= task._id %>">Priority</label>
                          </div>
                          <div class="input-field">
                              <input type="date" id="dueDate-<%= task._id %>" name="dueDate" value="<%= task.dueDate.toISOString().split('T')[0] %>">
                              <label for="dueDate-<%= task._id %>">Due Date</label>
                          </div>
                          <div class="input-field">
                              <select id="assignedTo-<%= task._id %>" name="assignedTo">
                                  <% employees.forEach(employee => { %>
                                      <option value="<%= employee._id %>" <%= task.assignedTo && task.assignedTo._id.toString() === employee._id.toString() ? 'selected' : '' %>><%= employee.username %></option>
                                  <% }) %>
                              </select>
                              <label for="assignedTo-<%= task._id %>">Assign To</label>
                          </div>
                          <div class="input-field">
                              <select id="status-<%= task._id %>" name="status">
                                  <option value="not started" <%= task.status === 'not started' ? 'selected' : '' %>>Not Started</option>
                                  <option value="in progress" <%= task.status === 'in progress' ? 'selected' : '' %>>In Progress</option>
                                  <option value="completed" <%= task.status === 'completed' ? 'selected' : '' %>>Completed</option>
                              </select>
                              <label for="status-<%= task._id %>">Status</label>
                          </div>
                          <button type="button" class="btn btn-secondary close-form" data-task-id="<%= task._id %>">Close</button>
                          <button type="submit" class="btn btn-primary">Update Task</button>
                      </form>
                  </li>
              <% }) %>
          <% } %>
      </ul>
      <div class="pagination">
          <% if (currentPage > 1) { %>
              <div class="page-item">
                  <a class="page-link" href="?page=<%= currentPage - 1 %>">&laquo;</a>
              </div>
          <% } %>
          <% for (let i = 1; i <= totalPages; i++) {%>
            <div class="page-item <%= i === currentPage ? 'active' : '' %>">
            <a class="page-link" href="?page=<%= i %>"><%= i %></a>
            </div>
          <% } %>
          <% if (currentPage < totalPages) { %>
            <div class="page-item">
            <a class="page-link" href="?page=<%= currentPage + 1 %>">Â»</a>
            </div>
          <% } %>
        </div>
      </div>
  </main>
  <!-- Compiled and minified JavaScript -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        var elems = document.querySelectorAll('select');
        M.FormSelect.init(elems);

        var dateElems = document.querySelectorAll('.datepicker');
        M.Datepicker.init(dateElems, {
            format: 'yyyy-mm-dd'
        });

        // Show snackbar if success message is present
        const successMessage = "<%= messages.success || '' %>";
        if (successMessage) {
            M.toast({html: successMessage, classes: 'rounded'});
        }

        // Initialize modal
        var modalElems = document.querySelectorAll('.modal');
        M.Modal.init(modalElems);

        // Show modal if no tasks
        if (document.getElementById('noTasksModal')) {
            var instance = M.Modal.getInstance(document.getElementById('noTasksModal'));
            instance.open();
        }

        // Toggle update task form
        document.querySelectorAll('.update-task-btn').forEach(button => {
            button.addEventListener('click', function() {
                var taskId = this.getAttribute('data-task-id');
                var form = document.getElementById('update-task-form-' + taskId);
                form.style.display = form.style.display === 'none' ? 'block' : 'none';
            });
        });

        // Close update task form
        document.querySelectorAll('.close-form').forEach(button => {
            button.addEventListener('click', function() {
                var taskId = this.getAttribute('data-task-id');
                var form = document.getElementById('update-task-form-' + taskId);
                form.style.display = 'none';
            });
        });

        // Filtering and searching logic
        const filterPriority = document.getElementById('filterPriority');
        const filterStatus = document.getElementById('filterStatus');
        const searchInput = document.getElementById('search');
        const taskItems = document.querySelectorAll('.task-item');

        function filterTasks() {
            const priority = filterPriority.value;
            const status = filterStatus.value;
            const searchQuery = searchInput.value.toLowerCase();

            taskItems.forEach(item => {
                const taskPriority = item.getAttribute('data-priority');
                const taskStatus = item.getAttribute('data-status');
                const taskTitle = item.querySelector('h3').innerText.toLowerCase();

                const matchesPriority = !priority || taskPriority === priority;
                const matchesStatus = !status || taskStatus === status;
                const matchesSearch = taskTitle.includes(searchQuery);

                if (matchesPriority && matchesStatus && matchesSearch) {
                    item.style.display = 'block';
                } else {
                    item.style.display = 'none';
                }
            });
        }

        filterPriority.addEventListener('change', filterTasks);
        filterStatus.addEventListener('change', filterTasks);
        searchInput.addEventListener('input', filterTasks);
    });
  </script>
</body>
</html>
  
